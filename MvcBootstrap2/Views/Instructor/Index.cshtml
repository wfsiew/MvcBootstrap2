@model MvcBootstrap2.ViewModels.InstructorIndexData

@using MvcBootstrap2.Models;
@using PagedList;
@using PagedList.Mvc;

@{
    ViewBag.Title = "Instructors";
    IPagedList<Instructor> pagedData = Model.Instructors as IPagedList<Instructor>;
}

<h2>Instructors</h2>

<div class="navbar">
    <div class="navbar-inner">
        <ul class="nav">
            <li><a href="@Url.Action("Create")"><i class="icon-plus icon-white"></i> Create New</a></li>
        </ul>
    </div>
</div>

@if (TempData["message"] != null)
{
    <div class="alert alert-success alert-dismissable">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        @TempData["message"]
    </div>
}

@using (Html.BeginForm("Index", "Instructor", FormMethod.Get, new { @class = "form-horizontal" }))
{
    <div class="control-group">
        <label class="control-label">Find by name:</label>
        <div class="controls">
            <div class="input-append">
                <input type="text" name="SearchString" value="@ViewBag.CurrentFilter" placeholder="Search" x-webkit-speech="x-webkit-speech" />
                <button type="submit" class="btn btn-default"><i class="icon-search icon-white"></i></button>
            </div>
        </div>
    </div>
}

@Html.ActionLink("HTML report", "HtmlReport", new
{
    sortOrder = ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    searchString = ViewBag.CurrentFilter
},
    new { target = "_blank" }) |
@Html.ActionLink("Pdf report", "PdfReport", new
{
    sortOrder = ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    searchString = ViewBag.CurrentFilter
},
    new { target = "_blank" }) |
@Html.ActionLink("Excel report", "ExcelReport", new
{
    sortOrder = ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    searchString = ViewBag.CurrentFilter
},
    new { target = "_blank" }) |
@Html.ActionLink("Csv report", "CsvReport", new
{
    sortOrder = ViewBag.CurrentSort,
    currentFilter = ViewBag.CurrentFilter,
    searchString = ViewBag.CurrentFilter
},
    new { target = "_blank" })

<table class="table table-striped table-hover table-condensed">
    <thead>
        <tr class="well">
            <th></th>
            <th>
                @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            </th>
            <th>
                @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm })
            </th>
            <th>
                @Html.ActionLink("Hire Date", "Index", new { sortOrder = ViewBag.DateSortParm })
            </th>
            <th>
                @Html.ActionLink("Office", "Index", new { sortOrder = ViewBag.LocationSortParm })
            </th>
            <th>Courses</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Instructor item in Model.Instructors)
        {
            string selectedRow = "";
            if (item.Id.ToString() == ViewBag.PersonID)
            {
                selectedRow = "success";
            }
            <tr class="@selectedRow" valign="top">
                <td>
                    @Html.ActionLink("Select", "Index", new { id = item.Id.ToString() })
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id.ToString() })
                    @Html.ActionLink("Details", "Details", new { id = item.Id.ToString() })
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id.ToString() })
                </td>
                <td>
                    @item.LastName
                </td>
                <td>
                    @item.FirstMidName
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.HireDate)
                </td>
                <td>
                    @if (item.OfficeAssignment != null)
                    {
                        @item.OfficeAssignment.Location
                    }
                </td>
                <td>
                    @{
                        foreach (Course course in item.Courses)
                        {
                            @course.CourseID @:  @course.Title <br />
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        <tr class="well">
            <td colspan="6">
			    <div class="pull-right">
                    Page @(pagedData.PageCount < pagedData.PageNumber ? 0 : pagedData.PageNumber) of @pagedData.PageCount
				</div>
            </td>
        </tr>
    </tfoot>
</table>
<br />

@Html.PagedListPager(pagedData, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }),
new PagedListRenderOptions
{
    DisplayLinkToPreviousPage = PagedListDisplayMode.IfNeeded,
    DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,
    DisplayLinkToNextPage = PagedListDisplayMode.IfNeeded,
    DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,
    ContainerDivClasses = new string[] { "pagination" },
    UlElementClasses = new string[] { }
})

@if (Model.Courses != null)
{ 
    <h3>Courses Taught by Selected Instructor</h3> 
    <table class="table table-striped table-hover table-condensed" style="width: 40%">
        <thead>
            <tr>
                <th></th>
                <th>ID</th>
                <th>Title</th>
                <th>Department</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Course item in Model.Courses)
            {
                string selectedRow = "";
                if (item.Id.ToString() == ViewBag.CourseID)
                {
                    selectedRow = "success";
                } 
                <tr class="@selectedRow">
                    <td>
                        @Html.ActionLink("Select", "Index", new { courseID = item.Id.ToString() })
                    </td>
                    <td>
                        @item.CourseID
                    </td>
                    <td>
                        @item.Title
                    </td>
                    <td>
                        @item.Department.Name
                    </td>
                </tr> 
            }
        </tbody>
    </table> 
}

@if (Model.Enrollments != null)
{
    <h3>Students Enrolled in Selected Course</h3> 
    <table class="table table-striped table-hover table-condensed" style="width: 30%">
        <thead>
            <tr>
                <th>Name</th>
                <th>Grade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Enrollment item in Model.Enrollments)
            { 
                <tr>
                    <td>
                        @item.Student.FullName
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Grade)
                    </td>
                </tr> 
            }
        </tbody>
    </table>
}
